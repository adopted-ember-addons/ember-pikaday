name: Node CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-v2
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --frozen-lockfile
      - name: lint
        run: yarn lint
      - name: test
        run: yarn test:ember
      - id: set-matrix
        run: echo "::set-output name=matrix::$(yarn --silent scenario-tester list --files ./scenarios.js --matrix 'yarn qunit ./scenarios.js --filter %s:')"
        working-directory: test-app

  compat-scenarios:
    needs: test
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.test.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-v2
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --no-lockfile
      - name: test
        run: ${{ matrix.command }}
        working-directory: test-app
